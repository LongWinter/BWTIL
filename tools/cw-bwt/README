Welcome to the context-wise BWT construction algorithm (cw-bwt)!

Authors: Nicola Prezza, Nicola Gigante, and Alberto Policriti
mail: nicolapr@gmail.com





 ************************************************************* WARNING : *********************************************************

	the tool is still under development!!! at the moment, cw.bwt works BUT very inefficient data structures are used!!!
	DO NOT use the tool on large files!

 *********************************************************************************************************************************



*** Brief introduction: ***

cw-bwt builds the BWT of a text (ASCII) file, using an amount of RAM comparable with the size of the compressed text. The algorithm exploits the partitioning induced by the length-k contexts to reduce the size of internal dynamic data structures used. As a result, for certain text distributions (nearly uniform) cw-bwt is optimal in both time and space.

*** Complexity ***

n = input length
Hk = k-th order entropy of the text, where k = log_s( n/log^3 n ) (Hk <= log s, where s is the alphabet size)

Average-case: uniform input texts (eg. DNA)

 time: O(n * Hk)	(a factor Hk from optimal)
 space: n * Hk + o(n * Hk)	(compressed succinct space)

Worst-case: Happens if the text has large (O(n)) length-k contexts; notice, however, that in this case the text is also highly compressible (Hk is small)

 time: O( n * log n * Hk )	(a factor log n * Hk from optimal)
 space: O( n * Hk )		(compressed)

*** Compile ***

In the cw-bwt/ directory, just execute

> make clean; make

The executable "cw-bwt" will be created in the BWTIL/ main folder.

*** Execute ***

In the BWTIL/ directory, execute

> ./cw-bwt

to display info about the tool usage.
